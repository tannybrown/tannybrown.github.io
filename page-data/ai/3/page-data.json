{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/ai/3/",
    "result": {"data":{"cur":{"id":"c5841f63-a94c-529d-880e-40ee62f7b930","html":"<h2 id=\"0-머신러닝을-왜-알아야하나요\" style=\"position:relative;\"><a href=\"#0-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%EC%9D%84-%EC%99%9C-%EC%95%8C%EC%95%84%EC%95%BC%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"0 머신러닝을 왜 알아야하나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 머신러닝을 왜 알아야하나요?</h2>\n<p><a href=\"https://tannybrown.github.io/ai/2/\">이전글</a>에서 딥러닝 모델에 대해 알아보았다. <br>\r\n최근 우리의 일상에 변화를 가져와준 chat GPT, DALL·E 는 모두 딥러닝 모델이다. <br>\r\n딥러닝 모델들이 나오면서 기존의 머신러닝 모델을 대체하고 있기도 하다. ex. SVM <br>\r\n그렇다면 이런 생각이 들 수 있다. <br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214812396-52638528-c9dd-41fa-a1be-a813ac404c1a.png\" alt=\"image\"></p>\n<blockquote>\n<p>딥러닝이 더 좋은거니까 머신러닝은 몰라도 되겠다!</p>\n</blockquote>\n<p>과연 머신러닝을 몰라도 되는걸까?<br>\r\n딥러닝 모델이 <strong>왜</strong> 떠오르게 되었는지부터 살펴보자.<br></p>\n<ul>\n<li>하드웨어의 발전</li>\n<li>빅데이터 <br></li>\n</ul>\n<p>필자는 크게 두가지에 주목하고 싶다. 딥러닝은 많은 데이터를 이용하고 많은 연산을 요한다. 따라서 하드웨어와 데이터가 뒷받침 되어야만이 가능했다.\r\n과거에 비해 데이터가 무수히 많이 나오고 있으며, GPU 성능의 증가로 딥러닝이 뜰 수 있는 최적의 조건이 되었다.</p>\n<blockquote>\n<p>뭐야 그러면 그냥 딥러닝만 하면 되겠네</p>\n</blockquote>\n<p>그러나 현업의 상황은 다소 다르다.<br> 데이터가 이렇게 충분하다면 딥러닝이 더 좋을 수 있으나, 우리 개발해야하는 환경에서는 원하는 데이터가 부족한 경우가 태반이다. 즉, 딥러닝보다 머신러닝의 성능이 더 좋은 경우들이 있다.<br>\r\n따라서 우린 상황에 맞게, <strong>우리가 가진 데이터에 따라 여러가지 전략을 취할 수 있어야한다</strong>. <br></p>\n<p><br><br></p>\n<h2 id=\"1-머신러닝의-분야\" style=\"position:relative;\"><a href=\"#1-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%EC%9D%98-%EB%B6%84%EC%95%BC\" aria-label=\"1 머신러닝의 분야 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 머신러닝의 분야</h2>\n<p>필자는 머신러닝의 학습 방법을 크게 4가지로 나눠보고자 한다.\r\n<br><br></p>\n<h3 id=\"1-지도학습supervised-learning\" style=\"position:relative;\"><a href=\"#1-%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5supervised-learning\" aria-label=\"1 지도학습supervised learning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) 지도학습(Supervised Learning)</h3>\n<p>그 첫번째, 지도학습이다.지도학습은 <strong>정답(뭐가 출력돼야 할 지)을 알고 있는</strong> 학습 방법이다.<br>\r\n즉, 입력 데이터에 대한 정답 레이블이 주어지며, 이를 기반으로 모델이 새로운 입력 데이터에 대한 출력을 예측할 수 있도록 학습한다. <br>\r\n예를 들어, 이미지 분류에서는 이미지와 해당 이미지가 어떤 클래스에 속하는지를 레이블로 가지고 학습을 수행한다.<br>\r\n<strong>회귀</strong>와 <strong>분류</strong> 모델이 이에 해당하며 앞으로 자세히 다뤄보자.</p>\n<br>\n<h3 id=\"2-비지도학습unsupervised-learning\" style=\"position:relative;\"><a href=\"#2-%EB%B9%84%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5unsupervised-learning\" aria-label=\"2 비지도학습unsupervised learning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) 비지도학습(Unsupervised Learning)</h3>\n<p>비지도 학습은 지도학습과 반대로, 입력 데이터만을 가지고 학습을 수행하는 방법이다.<br>\r\n즉, <strong>정답 레이블이 주어지지 않으며</strong>, 모델은 입력 데이터를 통해 자체적으로 패턴을 발견하고 이를 통해 데이터를 군집화하거나 압축하는 등의 작업을 수행한다.<br>\r\n예를 들어, 주식 데이터를 가지고 특정 주식이 어떤 그룹에 속하는지를 판단하거나, 이미지를 가지고 이미지 내에 포함된 오브젝트를 자동으로 구분하는 것이 일반적인 예이다.<br>\r\n<strong>군집화</strong>와 <strong>차원축소</strong> 등이 이에 해당한다.</p>\n<br>\n<h3 id=\"3-자기지도-학습self-supervised-learning\" style=\"position:relative;\"><a href=\"#3-%EC%9E%90%EA%B8%B0%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5self-supervised-learning\" aria-label=\"3 자기지도 학습self supervised learning permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) 자기지도 학습(Self-supervised Learning)</h3>\n<blockquote>\n<p>정답(label)을 알고 있는 데이터가 너무 적다…</p>\n</blockquote>\n<p>라는 문제점에서 출발한 학습 방법으로, 입력 데이터에서 자동으로 정답 레이블을 생성하여 학습을 수행하는 방법이다. 즉, 입력 데이터 자체를 기반으로 정답 레이블을 생성하여 학습을 수행한다. <br>\r\n예를들어, 이미지를 가지고 학습시에는 이미지에서 특정 오브젝트를 잘라내어 그것이 원래 이미지에서 어디에 있는지를 예측하는 것이 일반적이다.<br></p>\n<blockquote>\n<p>이런 과정이 왜 필요한건가요?</p>\n</blockquote>\n<p>정답 데이터의 수가 적으니, 이미지의 특정 오브젝트를 잘라서 학습시키면 많은 데이터를 확보할 수 있고, 그렇게 정답 데이터(이미지)에 대한 이해도가 높아져서 결과적으로 이미지 분류를 할때 성능이 좋아진다고 한다.</p>\n<br>\n<h3 id=\"4-강화-학습\" style=\"position:relative;\"><a href=\"#4-%EA%B0%95%ED%99%94-%ED%95%99%EC%8A%B5\" aria-label=\"4 강화 학습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4) 강화 학습</h3>\n<p>강화 학습은 어떠한 행동의 연속을 학습시키는 학습 방법이다. 강화학습에는 <strong>Agent</strong>와 <strong>Reward</strong>가 존재하는데, Agent는 우리가 학습시키고자 하는 대상을 의미하고, Reward는 말그대로 보상을 의미한다. 에이전트는 주어진 환경에서 취할 수 있는 행동들 중 하나를 선택하고, 그 행동에 따라 보상을 받거나 벌점을 받는 방식으로 학습이 진행된다.\r\n<br>\r\n대표적인 예시로는 알파고가 있다.</p>\n<br>\r\n<br>\n<br>\r\n기초적인 내용을 다루는 포스트이기에 아주 가볍게 머신러닝의 분야들에 대해 알아보았다. <br>\r\n다음 글에서는 인공신경망에 대해 알아보자.\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#0-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%EC%9D%84-%EC%99%9C-%EC%95%8C%EC%95%84%EC%95%BC%ED%95%98%EB%82%98%EC%9A%94\">0. 머신러닝을 왜 알아야하나요?</a></p>\n</li>\n<li>\n<p><a href=\"#1-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D%EC%9D%98-%EB%B6%84%EC%95%BC\">1. 머신러닝의 분야</a></p>\n<ul>\n<li><a href=\"#1-%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5supervised-learning\">1) 지도학습(Supervised Learning)</a></li>\n<li><a href=\"#2-%EB%B9%84%EC%A7%80%EB%8F%84%ED%95%99%EC%8A%B5unsupervised-learning\">2) 비지도학습(Unsupervised Learning)</a></li>\n<li><a href=\"#3-%EC%9E%90%EA%B8%B0%EC%A7%80%EB%8F%84-%ED%95%99%EC%8A%B5self-supervised-learning\">3) 자기지도 학습(Self-supervised Learning)</a></li>\n<li><a href=\"#4-%EA%B0%95%ED%99%94-%ED%95%99%EC%8A%B5\">4) 강화 학습</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"0. 머신러닝을 왜 알아야하나요? 이전글에서 딥러닝 모델에 대해 알아보았다. \r\n최근 우리의 일상에 변화를 가져와준 chat GPT, DALL·E 는 모두 딥러닝 모델이다. \r\n딥러닝 모델들이 나오면서 기존의 머신러닝 모델을 대체하고 있기도 하다. ex. SVM \r\n그렇다면 이런 생각이 들 수 있다. \r\nimage 딥러닝이 더 좋은거니까 머신러닝은 몰라도 되겠다! 과연 머신러닝을 몰라도 되는걸까?\r\n딥러닝 모델이 왜 떠오르게 되었는지부터 살펴보자. 하드웨어의 발전 빅데이터  필자는 크게 두가지에 주목하고 싶다. 딥러닝은 많은 데이터를 이용하고 많은 연산을 요한다. 따라서 하드웨어와 데이터가 뒷받침 되어야만이 가능했다.\r\n과거에 비해 데이터가 무수히 많이 나오고 있으며, GPU 성능의 증가로 딥러닝이 뜰 수 있는 최적의 조건이 되었다. 뭐야 그러면 그냥 딥러닝만 하면 되겠네 그러나 현업의 상황은 다소 다르다. 데이터가 이렇게 충분하다면 딥러닝이 더 좋을 수 있으나, 우리 개발해야하는…","frontmatter":{"date":"January 26, 2023","title":"2. 머신러닝을 왜 알아야하나요?","categories":"AI/ML/DL","author":"tanny","emoji":"🔮"},"fields":{"slug":"/ai/3/"}},"next":{"id":"b2d1192c-50b2-5a83-be34-74b38f4e22c1","html":"<h2 id=\"0-딥러닝-모델\" style=\"position:relative;\"><a href=\"#0-%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%AA%A8%EB%8D%B8\" aria-label=\"0 딥러닝 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 딥러닝 모델</h2>\n<p><a href=\"https://tannybrown.github.io/ai/1/\">이전글</a>에서 인공지능에 대한 전반적인 소개를 해보았다. <br>\r\n이번엔 딥러닝을 대표하는 3가지 모델에 대해서 <strong>‘간략히’</strong> 소개해보고자 한다! <br></p>\n<p>각각이 무엇인지 살펴보기 전에, 딥러닝 모델이라는게 무엇일까? <br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214604573-31383ec6-316a-4329-8afc-ed26cc5b225c.png\" alt=\"image\"><br>\r\n<a>(우리가 떠올린 모델)</a></p>\n<blockquote>\n<p>죄송합니다.</p>\n</blockquote>\n<p>앞으로 모델이라는 말을 많이 듣게 될 것이다.<br>\r\n인공지능 모델, 머신러닝 모델, 딥러닝 모델. <br>\r\n여기서 말하는 모델이란 ’<strong>프로그램</strong>‘정도의 의미로 해석하면 된다. <br></p>\n<blockquote>\n<p>엄밀히 말하면, 프로그램보다는 ’<strong>함수</strong>‘라고 보는 것이 맞다.<br>\r\n함수의 파라미터(가중치)를 업데이트 하며 모델은 학습한다.<br>\r\n인공지능을 처음 접하는 독자라면 일단 프로그램이라고 받아들여도 좋다.</p>\n</blockquote>\n<p>이번시간엔 대표적인 3가지 모델에 대해 알아보자.</p>\n<p><br><br></p>\n<h2 id=\"1-cnnconvolution-neural-network\" style=\"position:relative;\"><a href=\"#1-cnnconvolution-neural-network\" aria-label=\"1 cnnconvolution neural network permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. CNN(Convolution Neural Network)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/214606928-f0a82073-ece0-4aec-809f-bec7ee9bb606.png\" alt=\"image\"><br></p>\n<p>번역하면 합성곱 신경망으로, 인간의 시신경 구조를 모방한 기술이다.<br>\r\n일반적으로 컴퓨터 비전 등 이미지 데이터를 처리하는 데에 많이 쓰인다.</p>\n<p>이 CNN 모델은 사진데이터를 input으로 받아서 학습한다.</p>\n<blockquote>\n<p>여기서 잠깐! 모델은 언제나 숫자를 input으로 받아서 숫자를 output으로 출력한다.</p>\n</blockquote>\n<p>즉슨, 내가 모델에게 입력시킬 사진 역시 <strong>숫자</strong>라는 말이다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214620268-a93ffe75-9ec1-4455-8a9d-462bd0ec13e2.png\" alt=\"image\"><br></p>\n<p>사진이 숫자라니? 이해가 가지 않을 사람도 있을 수 있으니 조금만 더 생각해보면 다음과 같다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214626364-98147c6f-e866-4ec7-b958-d66d1f6b1b11.png\" alt=\"image\"><br></p>\n<p>우리가 보는 모니터의 화면은 <strong>픽셀</strong>로 이루어져 있다. 그리고 그 픽셀은 3개의 필터(RGB)로 이루어져 있다.<br>\r\nRGB필터의 값은 0~255로 나타나며, RGB필터의 값들의 비율에 따라 한 픽셀의 색이 구현되고, 그 픽셀들이 모여 화면을 이룬다.</p>\n<blockquote>\n<p>즉, CNN모델의 input은 RGB필터의 값(0~255)가 된다. 그리고 전체 픽셀에 대한 데이터를 받으며, RGB필터별로 처리된다.</p>\n</blockquote>\n<p>Output은 무엇이겠는가?<br>\r\n지정해주기 나름이지만, 강아지 사진을 분류하고 싶다면 강아지를 1로 출력하고 나머지는 0으로 출력한다든지 의 방법으로 지정해줄 수 있다.</p>\n<blockquote>\n<p>이정도만 설명하고 넘어가고 싶지만 한가지만 더 설명하려한다.</p>\n</blockquote>\n<p><strong>Q : CNN은 왜 이미지 데이터에 쓰이는 건가요?</strong></p>\n<blockquote>\n<p><strong>필자는 이런 시선이 매우 중요하다고 생각한다.   ‘왜?라는 질문 말이다’.</strong></p>\n</blockquote>\n<p>다만 지금 우리의 수준에서 위 질문에 대한 답을 설명하긴 어려우니 질문을 조금 바꾸자.<br></p>\n<p><strong>Q : 이미지 데이터는 어떤 특징이 있나요?</strong><br></p>\n<p>이미지는 위치에 상관없이 동일한 패턴들이 반복되는 특징을 갖고 있다.</p>\n<p>즉, 어느 한 위치에서 학습한 파라미터를 이용해서 다른 위치에 있는 동일한 특징을 추출할 수 있는 것이다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214611292-62b48317-3723-434d-b083-cdac3288aa1e.png\" alt=\"image\"> <br>\r\n차후에 CNN에 대해 더 공부하며, 첫번째 질문에 답할 수 있도록 해보자.</p>\n<p><br><br></p>\n<h2 id=\"2-rnnrecurrent-neural-network\" style=\"position:relative;\"><a href=\"#2-rnnrecurrent-neural-network\" aria-label=\"2 rnnrecurrent neural network permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. RNN(Recurrent Neural Network)</h2>\n<p>번역하면 순환 신경망으로, <strong>순차적인 정보</strong>가 담긴 데이터에서 패턴을 인식하고 추상화된 정보를 추출한다.\r\n따라서 일반적으로 텍스트, 음성, 음악, 영상 등 순차적 데이터를 다루는데 적합하다.<br>\r\n베니싱 그레디언트 문제가 있어서 학습을 못하는 경우가 있는데, 이를 개선하기 위해 LSTM(Long Short Term Memory)가 개발되었다.<br></p>\n<blockquote>\n<p>베니싱 그레디언트? LSTM? 너무 어려워요.</p>\n</blockquote>\n<p><del>신경망의 층수가 늘어날수록, 데이터가 유의미한 값을 잃어버려 학습에 지장이 생기는 것</del><br>\r\n지금은 몰라도 된다. 차후에 살펴보자.<br>\r\n그래서 현재 작곡, 작사, 주식 예측등 다양한 분야에서 적용이 된다.</p>\n<p><br><br></p>\n<h2 id=\"3-gangenerative-adversarial-network\" style=\"position:relative;\"><a href=\"#3-gangenerative-adversarial-network\" aria-label=\"3 gangenerative adversarial network permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. GAN(Generative Adversarial Network)</h2>\n<p>번역하면 생성 대립 신경망으로, 진짜 같은 가짜를 만드는 모델이다.\r\n어떤방식인지 잘 설명된 그림이 있으니 보도록 하자.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/214604094-d6d76500-f31e-485a-baab-0c2f0dd091e3.png\" alt=\"image\"><br>\r\n위 그림에 도둑과 경찰이 있다. 도둑과 경찰은 각각 모델에 해당하며, 도둑을 <strong>G모델</strong>, 경찰을 <strong>D모델</strong>이라 부르겠다.\r\nG모델은 가짜를 만들어내는 모델로, 위 그림에서는 위조 지폐를 만들어내고 있다. D모델은 가짜와 진짜를 구분해내는 모델로, 위 그림에서는 위조 지폐를 감별해내고 있다.<br></p>\n<blockquote>\n<p>GAN은 어떻게 학습할까?<br></p>\n</blockquote>\n<p>GAN의 G와 D는 학습 방향이 다르다. G는 D를 속이기 위해 학습하고, D는 G를 감별해내기 위해 학습한다. 따라서 두 모델은 동시에 학습이 불가능하다.<br>\r\n학습초기에 G와 D는 성능이 둘다 형편이 없다. (누굴 먼저 학습할지, 순서는 크게 상관이 없다고 한다.)<br></p>\n<ol>\n<li>D를 먼저 학습시킨다고 가정하자. D는 위조 감별 모델이므로, G가 만들어낸 값과 real 데이터(정답)를 넣어주며 학습시킨다.<br></li>\n<li>그렇게 D의 성능이 어느정도 좋아지면, D는 고정시키고 G를 학습시킨다.<br></li>\n<li>G는 D를 속일 위조 데이터를 만들고, 위조 데이터를 D에 넣어 나온 결과를 통해 학습한다.<br></li>\n</ol>\n<p>4  이후 D를 어느정도 속일 수 있게 되면, 다시 G는 고정시키고 D를 학습시킨다.<br>\r\n5. 이렇게 번갈아가며 학습을 시키고, D가 실제지폐를 맞추는 확률이 <strong>0.5</strong> 가 되면(<strong>즉, 실제와 가짜를 구분할 수 없는 수준으로 가짜를 생성하는 상태</strong>), GAN모델의 학습이 끝난다.<br>\r\nGAN 모델은 deepfake, 이미지 생성 기술 등에 사용된다. <br></p>\n<p><br><br></p>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/214604332-788f93ab-6517-4f54-9f0e-da45d967e7fe.png\" alt=\"image\"><br>\r\n이번 시간엔 딥러닝을 대표하는 3가지 모델에 대해 살펴보았다. <br>\r\n<a href=\"https://tannybrown.github.io/ai/3/\">다음글</a>에서는 머신러닝의 분류에 대해서 살펴보자.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EB%94%A5%EB%9F%AC%EB%8B%9D-%EB%AA%A8%EB%8D%B8\">0. 딥러닝 모델</a></li>\n<li><a href=\"#1-cnnconvolution-neural-network\">1. CNN(Convolution Neural Network)</a></li>\n<li><a href=\"#2-rnnrecurrent-neural-network\">2. RNN(Recurrent Neural Network)</a></li>\n<li><a href=\"#3-gangenerative-adversarial-network\">3. GAN(Generative Adversarial Network)</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 26, 2023","title":"1. 딥러닝 기본 모델 소개","categories":"AI/ML/DL","author":"tanny","emoji":null},"fields":{"slug":"/ai/2/"}},"prev":{"id":"cfe83a47-50f7-5608-b434-5d7d2e9e3f00","html":"<h2 id=\"0-신경세포-뉴런\" style=\"position:relative;\"><a href=\"#0-%EC%8B%A0%EA%B2%BD%EC%84%B8%ED%8F%AC-%EB%89%B4%EB%9F%B0\" aria-label=\"0 신경세포 뉴런 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 신경세포 뉴런</h2>\n<p><a href=\"https://tannybrown.github.io/ai/3/\">이전글</a>에서 머신러닝의 분야에 대해 살펴보았다. <br>\r\n이번글에서는 딥러닝의 기초가 되는 인공신경망에 대해 다뤄보도록 하자.<br>\r\n<br>\r\n당신이 고등학교 생명과학 시간에 졸지 않았다면 이 그림을 기억할 것이다.<br><br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/215143541-5dff4459-54d7-4dbb-bdd5-fd6bb3b4e511.png\" alt=\"image\"><br>\r\n<br>\r\n위 그림은 신경세포 <strong>뉴런</strong>을 나타낸 것으로, 가지돌기에서 여러 자극을 전달받고, 핵에서 자극을 전달할지를 결정하며, 축삭돌기를 통해 또 다른 신경세포로 자극이 전달된다.<br>\r\n딥러닝에서 사용되는 <strong>인공신경망</strong>은 이름에서 알수 있듯, 이 신경세포의 동작방식과 닮아 있다. <br><br><br></p>\n<h2 id=\"1-퍼셉트론\" style=\"position:relative;\"><a href=\"#1-%ED%8D%BC%EC%85%89%ED%8A%B8%EB%A1%A0\" aria-label=\"1 퍼셉트론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 퍼셉트론</h2>\n<p>우리의 신체에 뉴런이 있듯, 딥러닝의 인공신경망에는 <strong>퍼셉트론</strong>이 있다.\r\n<img src=\"https://user-images.githubusercontent.com/121401159/215151104-d731ca4b-ca65-4651-bb82-1e82b4ca5ed6.png\" alt=\"image\"><br>\r\n위 그림은 퍼셉트론을 나타낸 것인데 한번 살펴보자.<br>\r\n우선 좌측의 x 값들은 퍼센트론의 <strong>input</strong>에 해당한다. 위 예시에서는 두개만 그렸지만 여러개의 <strong>input</strong>이 있을 수 있다.<br>\r\n그리고 x와 연결된 선에 써있는 w를 우린 <strong>가중치</strong> 혹은 <strong>파라미터</strong> 라고 부른다. 이 파라미터는 각각의 input들과 곱해진다.<br>\r\n그리고 가장 아래 있는 <strong>bias</strong>는 <strong>편향, 민감도</strong>를 나타내며 따로 가중치가 곱해지지 않는다. <br>\r\n퍼셉트론은 이렇게 들어온 인풋과 파라미터를 곱한 값을 더하고 바이어스까지 더해준다. 수식으로 표현하면 다음과 같다.<br><br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/215153563-403ed017-a9f1-4444-bf4c-27836bcefbb0.png\" alt=\"image\"><br>\r\n<br>\r\n이렇게 계산하면 끝이냐? 아니다. 이렇게 계산한 결과를 <strong>활성화 함수(activation function)</strong> 에 넣어준다.<br>\r\n이때 활성화 함수로는 <strong>unit step function</strong>(입력이 0보다 작으면 0, 1보다 크면 1을 출력)을 사용한다.<br></p>\n<blockquote>\n<p>자 이제 슬슬 궁금한게 있을 것이다. 하나씩 대답해주겠다.</p>\n</blockquote>\n<p><strong>??? : 바이어스는 왜 있어야하나요?</strong><br>\r\n바이어스가 없다면, input으로 0이 들어왔을때 언제나 출력값이 0이 된다. 즉슨, 인풋이 0일때 우리가 원하는 결과를 맞춰주기 위해 필요하다. <br><br>\r\n<strong>??? : 활성화 함수는 unit step function만 쓰나요?</strong> <br>\r\n퍼셉트론에서는 unit step function을 사용한다. 하지만 MLP(Multi-Layer perceptron)등 다른 모델에서는 여러가지 다양한 활성화 함수를 사용한다. <br></p>\n<blockquote>\n<p>추가적으로, 퍼셉트론의 선을 edge라고 부르고, activation 함수가 있는 동그라미를 node라고 부른다. 알아두자.</p>\n</blockquote>\n<p><br><br></p>\n<h2 id=\"2-다층-퍼셉트론mlp\" style=\"position:relative;\"><a href=\"#2-%EB%8B%A4%EC%B8%B5-%ED%8D%BC%EC%85%89%ED%8A%B8%EB%A1%A0mlp\" aria-label=\"2 다층 퍼셉트론mlp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 다층 퍼셉트론(MLP)</h2>\n<p>앞서 살펴본 퍼셉트론을 <strong>‘단층 퍼셉트론’</strong> 이라고 부른다. <br>\r\n말그대로 층이 하나였기 때문에 붙여진 이름인데, 우린 이러한 단층 퍼셉트론을 여러겹으로 쌓을 수 있다. 그렇게 여러층의 퍼셉트론으로 구성한 것을 ’<strong>다층 퍼셉트론</strong>‘이라고 부른다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/215158159-dd434850-9cc3-4436-b371-1809b1133dea.png\" alt=\"image\"><br></p>\n<p>몇가지 용어를 더 살펴보면, 입력을 받는 부분을 <strong>입력층</strong>, 출력하는 부분을 <strong>출력층</strong> 이라고 하며, 중간에 있는 layer를 <strong>은닉층(hidden layer)</strong> 라고 한다. 그리고 모든 노드에 엣지가 연결되어 있으면 <strong>fully connected</strong> 라고 부른다. <br>\r\n마지막으로, 은닉층이 2개 이상인 신경망을 우린 <strong>DNN(Deep Neural Network)</strong> 이라고 한다.</p>\n<blockquote>\n<p>DNN? 어디서 들어봤는데?</p>\n</blockquote>\n<p>라는 생각이 들었다면 정말 고맙다. 맞다. 첫번째 글에서 살펴보았던, 딥러닝에 사용된다고 소개했던 것이 바로 DNN이다.<br></p>\n<p><br><br></p>\n<h2 id=\"3-그래서-이걸-어떻게-써먹어요\" style=\"position:relative;\"><a href=\"#3-%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%9D%B4%EA%B1%B8-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%8D%A8%EB%A8%B9%EC%96%B4%EC%9A%94\" aria-label=\"3 그래서 이걸 어떻게 써먹어요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 그래서 이걸 어떻게 써먹어요?</h2>\n<p>지금까지 잘 따라왔다면 이런 의문이 든다. <br></p>\n<blockquote>\n<p>퍼셉트론, 다층 퍼셉트론… 일단 뭔진 알겠는데 이거 가지고 뭐 어떻게 머신러닝, 딥러닝을 한다는거야?</p>\n</blockquote>\n<p><strong>학습</strong>에 대해 설명하면 이 궁금증은 해결된다. <br>\r\n머신러닝, 딥러닝에서 말하는 <strong>학습</strong>이라는 것이 바로, 위에서 살펴본 <strong>가중치</strong>와 <strong>bias</strong>를 업데이트하며 <strong>최적의 가중치와 bias</strong>를 찾는 과정이다. <br>\r\n뭔소린지 모르겠다고?</p>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/215161222-9a6ad1d3-df29-4f6b-9be0-3127625a06ce.png\" alt=\"image\"><br></p>\n<p>다음글에서 이에대한 궁금증을 해결해보자.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EC%8B%A0%EA%B2%BD%EC%84%B8%ED%8F%AC-%EB%89%B4%EB%9F%B0\">0. 신경세포 뉴런</a></li>\n<li><a href=\"#1-%ED%8D%BC%EC%85%89%ED%8A%B8%EB%A1%A0\">1. 퍼셉트론</a></li>\n<li><a href=\"#2-%EB%8B%A4%EC%B8%B5-%ED%8D%BC%EC%85%89%ED%8A%B8%EB%A1%A0mlp\">2. 다층 퍼셉트론(MLP)</a></li>\n<li><a href=\"#3-%EA%B7%B8%EB%9E%98%EC%84%9C-%EC%9D%B4%EA%B1%B8-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%8D%A8%EB%A8%B9%EC%96%B4%EC%9A%94\">3. 그래서 이걸 어떻게 써먹어요?</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 28, 2023","title":"3. 딥러닝의 시작, 인공신경망","categories":"AI/ML/DL","author":"tanny","emoji":"🔮"},"fields":{"slug":"/ai/4/"}},"site":{"siteMetadata":{"siteUrl":"https://tannybrown.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/ai/3/","nextSlug":"/ai/2/","prevSlug":"/ai/4/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}