{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/ai/11/",
    "result": {"data":{"cur":{"id":"c8797234-97fb-56fa-b34d-79f035505ba5","html":"<h2 id=\"0-지난-이야기\" style=\"position:relative;\"><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\" aria-label=\"0 지난 이야기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 지난 이야기</h2>\n<p><a href=\"https://tannybrown.github.io/ai/10/\">이전글</a>에서는 역전파에 대해 알아보았다.<br>\r\n이번글에서는 non-linear activation은 왜 쓰는 것인지! 알아보겠다.<br></p>\n<br>\r\n<br>\n<h2 id=\"1-linear-activation\" style=\"position:relative;\"><a href=\"#1-linear-activation\" aria-label=\"1 linear activation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Linear activation</h2>\n<p>앞선 글들을 잘 읽어왔다면, activation function 이 무엇인지는 알고 있을 것이다.<br></p>\n<blockquote>\n<p>모르는 사람들을 위해서.<br>\r\n활성화 함수를 의미하며, 인공신경망 구조에서 <strong>입력신호의 총합을 출력신호로 바꿔주는 함수</strong>를 의미한다.<br>\r\n인체의 뉴런속의 시냅스와 유사한 역할이다.</p>\n</blockquote>\n<p>그러면 linear activation은 무엇인가?<br>\r\nlinear activation은 활성화 함수가 linear function인 경우, 즉 1차 함수 형태인 경우를 의미한다.<br></p>\n<blockquote>\n<p>예를들어, activation function으로 f(x) = x 를 쓰는 경우를 들 수 있다.<br>\r\n이 경우, 입력으로 받은 값이 그대로 출력으로 나올 것이다.</p>\n</blockquote>\n<p>linear activation은 딥러닝에서 많이 사용되는 활성화 함수이다. 대표적으로 회귀문제, 마지막 계층의 활성화 함수, LSTM or GRUs등의 순환 신경망에서 사용된다.<br></p>\n<br>\r\n<br>\n<h2 id=\"2-linear-activation의-한계\" style=\"position:relative;\"><a href=\"#2-linear-activation%EC%9D%98-%ED%95%9C%EA%B3%84\" aria-label=\"2 linear activation의 한계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Linear activation의 한계</h2>\n<p>linear activation은 입출력의 크기를 변하지 않게 하는 장점이 있지만, 단점 또한 존재한다.<br>\r\n이번글에서 전달하고 싶은 linear activation의 단점은 바로, linear activation만으로는 <strong>복잡한 인공신경망</strong>을 표현하지 못한다는 것이다.<br></p>\n<h3 id=\"복잡한-인공신경망\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%9D%B8%EA%B3%B5%EC%8B%A0%EA%B2%BD%EB%A7%9D\" aria-label=\"복잡한 인공신경망 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복잡한 인공신경망?</h3>\n<p>그저 layer가 깊으면 복잡한 인공신경망일까? 약 100층, 200층, 1000층을 쌓으면 복잡한 인공신경망일까?<br>\r\n복잡한 인공신경망이기 위해서는 한가지 조건이 필요하다. 바로 activation function이 linear activation이 아니어야 한다는 것이다.<br>\r\n왜 그런것인지 예시를 통해 살펴보자.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218087901-2fd4007f-8b1e-4962-988b-a7015ed234a4.png\" alt=\"image\"><br>\r\n가장 기본적인 구조로 1차함수 wx + b 를 만들어 보았다. 여기까지는 쉽게 따라 올 수 있을 것이다.<br>\r\n그렇다면 여기서 더 층(layer)를 늘려본다면 더 복잡한 출력을 가질 수 있을지 살펴보자.\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218087373-3e4a1db2-37db-430b-a6c0-bd0fc5469a6d.png\" alt=\"image\"><br>\r\n조금 더 층을 늘려서 표현해보았다.<br>\r\n출력을 보면 f(f(x)w + b)의 형태인데 f(x)가 linear activation 이므로 이결과 역시 linear function이 된다.<br>\r\n즉슨, 층을 아무리 늘려도 g(x) = aw + b 의 형태를 벗어나지 못한다는 뜻이다.</p>\n<blockquote>\n<p>결론 : linear activation으로는 아무리 깊게 만들어도 hidden layer 없는 인공신경망 만큼의 표현력만 갖게 된다.</p>\n</blockquote>\n<br>\r\n<br>\n<h2 id=\"3-non-linear-activation\" style=\"position:relative;\"><a href=\"#3-non-linear-activation\" aria-label=\"3 non linear activation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Non-linear activation</h2>\n<p>이러한 linear activation의 한계가 있기때문에, 우리는 non-linear activation을 같이 사용한다.<br>\r\n대표적인 non-linear activation으로는 unit step fuction, sigmoid 등이 있다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218089610-0e3216e4-efc6-40dc-8620-b331da1ee99b.png\" alt=\"image\">\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218089725-0858eb69-5ea0-405f-af66-e86907006c1b.png\" alt=\"image\"><br></p>\n<p>unit step function은 우리가 일전에 봤으니 설명은 생략하고 sigmoid는 다음글에서 다룰 예정이다.</p>\n<br>\n<blockquote>\n<p>그렇다고 linear activation이 꼭 안좋고 나쁜것만은 아니다.\r\nTrade-Off는 언제나 존재한다.<br>\r\n일반적으로 복잡한 작업에는 non-linear activation이 선호되는 반면, 입력과 출력 사이의 선형 관계를 원하는 간단한 회귀 문제에는 linear activation이 유용하다.</p>\n</blockquote>\n<br>\r\n<br>\n<h2 id=\"4-마무리\" style=\"position:relative;\"><a href=\"#4-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"4 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 마무리</h2>\n<p>이번글에서는 non-linear activation을 써야하는 이유에 대해 알아보았다.<br>\r\n<a href=\"https://tannybrown.github.io/ai/12/\">다음글</a>에서는 이진분류에 대해 알아보도록 하자.\r\n<br>\r\n<br></p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\">0. 지난 이야기</a></p>\n</li>\n<li>\n<p><a href=\"#1-linear-activation\">1. Linear activation</a></p>\n</li>\n<li>\n<p><a href=\"#2-linear-activation%EC%9D%98-%ED%95%9C%EA%B3%84\">2. Linear activation의 한계</a></p>\n<ul>\n<li><a href=\"#%EB%B3%B5%EC%9E%A1%ED%95%9C-%EC%9D%B8%EA%B3%B5%EC%8B%A0%EA%B2%BD%EB%A7%9D\">복잡한 인공신경망?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#3-non-linear-activation\">3. Non-linear activation</a></p>\n</li>\n<li>\n<p><a href=\"#4-%EB%A7%88%EB%AC%B4%EB%A6%AC\">4. 마무리</a></p>\n</li>\n</ul>\n</div>","excerpt":"0. 지난 이야기 이전글에서는 역전파에 대해 알아보았다.\r\n이번글에서는 non-linear activation은 왜 쓰는 것인지! 알아보겠다. 1. Linear activation 앞선 글들을 잘 읽어왔다면, activation function 이 무엇인지는 알고 있을 것이다. 모르는 사람들을 위해서.\r\n활성화 함수를 의미하며, 인공신경망 구조에서 입력신호의 총합을 출력신호로 바꿔주는 함수를 의미한다.\r\n인체의 뉴런속의 시냅스와 유사한 역할이다. 그러면 linear activation은 무엇인가?\r\nlinear activation은 활성화 함수가 linear function인 경우, 즉 1차 함수 형태인 경우를 의미한다. 예를들어, activation function으로 f(x) = x 를 쓰는 경우를 들 수 있다.\r\n이 경우, 입력으로 받은 값이 그대로 출력으로 나올 것이다. linear activation은 딥러닝에서 많이 사용되는 활성화 함수이다. 대표적으로 회귀문제, 마지막…","frontmatter":{"date":"February 10, 2023","title":"10. non-linear activation은 왜 쓰는 것일까?","categories":"AI/ML/DL","author":"tanny","emoji":"🔮"},"fields":{"slug":"/ai/11/"}},"next":{"id":"9e5448dd-71aa-5c20-a52a-f85b88a364ea","html":"<h2 id=\"0-지난-이야기\" style=\"position:relative;\"><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\" aria-label=\"0 지난 이야기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 지난 이야기</h2>\n<p><a href=\"https://tannybrown.github.io/recommend_system/1/\">이전글</a>에서 추천시스템이 무엇인지 살펴보았다.<br>\r\n이번글에서는 추천 알고리즘에 대해 알아보자.<br><br></p>\n<h2 id=\"1-추천-알고리즘-흐름도\" style=\"position:relative;\"><a href=\"#1-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%ED%9D%90%EB%A6%84%EB%8F%84\" aria-label=\"1 추천 알고리즘 흐름도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 추천 알고리즘 흐름도</h2>\n<p>추천 알고리즘의 flow chart이다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/217848503-4f8e22bc-97ba-4f3a-a284-c0c062dd6b25.png\" alt=\"image\"><br>\r\n<strong>추천시스템</strong>은 말그대로 아이템이 있고 <strong>어떤 아이템을 추천</strong>할지 추천목록들을 플랫폼에서 <strong>어떻게 보여줄지</strong> 등 전체적인 것을 포함한 것을 이야기 한다면,\r\n추천알고리즘은 <strong>item pool</strong>에서 <strong>후보군</strong>들을 만들고, <strong>intention</strong>이나 <strong>필터링</strong>을 하고, <strong>예측</strong>을 통해 추천이 잘 되는지 판단하는 것을 의미한다고 볼 수 있다.<br>\r\n이번글에서는 대표적인 추천 알고리즘 두가지에 대해 알아보겠다.</p>\n<p><br><br></p>\n<h2 id=\"2-콘텐츠-기반-추천-시스템contents-based-recommander-system\" style=\"position:relative;\"><a href=\"#2-%EC%BD%98%ED%85%90%EC%B8%A0-%EA%B8%B0%EB%B0%98-%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9Ccontents-based-recommander-system\" aria-label=\"2 콘텐츠 기반 추천 시스템contents based recommander system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 콘텐츠 기반 추천 시스템(Contents-based Recommander System)</h2>\n<p>먼저, 콘텐츠 기반 추천 시스템은 사용자가 과거에 좋아했던 아이템을 파악하여 그 아이템과 비슷한 아이템을 추천하는 것이다.<br>\r\n예를 들어 과거에 ‘액션’장르의 영화를 좋아했다면, 같은 장르의 아이템을 추천한다거나<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/217851876-280fbdad-94ec-4c36-a6f6-c1bbd3ec087c.png\" alt=\"image\"><br></p>\n<p>아이언맨을 좋아했다면, 스파이더맨과 같은 마블 영화를 추천한다거나 등이 있을 수 있다.<br>\r\n조금 더 자세히 들어가보면, 유저가 과거에 좋아했던 아이템들과 새로운 아이템들(유저가 좋아했던 아이템과 비슷한 아이템) 간의 관계를 <strong>점수로 표현</strong>하고 점수가 높은 아이템들을 유저에게 <strong>추천</strong>하는 것이다.</p>\n<p><br><br></p>\n<h2 id=\"3-협업-필터링collaborative-filtering\" style=\"position:relative;\"><a href=\"#3-%ED%98%91%EC%97%85-%ED%95%84%ED%84%B0%EB%A7%81collaborative-filtering\" aria-label=\"3 협업 필터링collaborative filtering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 협업 필터링(Collaborative Filtering)</h2>\n<p>두번째로, 협업 필터링은 <strong>비슷한 성향</strong> 또는 <strong>취향</strong>을 갖는 <strong>다른 유저가 좋아한 아이템</strong>을 현재 유저에게 추천하는 것을 의미한다. <br>\r\n예를들어, 어떠한 아이템x에 대해서 A와 B 두명의 유저가 <strong>비슷한 혹은 같은</strong> 평가를 내렸을때, 다른 아이템y에 대해 A가 비슷한 평가를 나타냈다면, B 또한 좋아할 것으로 예측하고 추천하는 것이다.</p>\n<blockquote>\n<p>유저 A와 B는 성향이 비슷할 것이라는 대전제에서 출발 하는 것이다.</p>\n</blockquote>\n<p><br><br></p>\n<h2 id=\"4-hybrid-recommander-system\" style=\"position:relative;\"><a href=\"#4-hybrid-recommander-system\" aria-label=\"4 hybrid recommander system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Hybrid Recommander System</h2>\n<p>앞서 살펴본 콘텐츠 기반 추천 시스템과 협업 필터링은 장단점이 있다.<br>\r\n<strong>컨텐츠 기반 추천 시스템의 장점</strong></p>\n<ul>\n<li>이해 및 구현이 용이함</li>\n<li>제한된 양의 사용자 데이터를 처리할 수 있음</li>\n<li>시간에 따른 사용자 기본 설정 변경을 처리할 수 있음</li>\n<li>사용자가 아직 등급을 매기지 않은 항목이라도 사용자에게 항목을 추천할 수 있음</li>\n</ul>\n<p><strong>컨텐츠 기반 추천 시스템의 단점</strong></p>\n<ul>\n<li>사용자가 과거에 좋아했던 것과 유사한 항목만 추천하는 것으로 제한됨</li>\n<li>사용자의 기본 설정이 제대로 정의되지 않았거나 항목의 속성에 대한 정보가 제한된 경우 정확한 권장 사항을 제공하지 못할 수 있음</li>\n<li>사용자가 이전에 경험하지 못한 새로운 범주 또는 장르의 항목을 추천하는 데 어려움을 겪을 수 있음</li>\n</ul>\n<p><strong>협업 필터링의 장점</strong></p>\n<ul>\n<li>많은 양의 사용자 데이터를 처리할 수 있음</li>\n<li>사용자가 많은 항목을 평가하지 않았더라도 정확한 권장 사항을 제공할 수 있음</li>\n<li>시간에 따른 사용자 기본 설정 변경을 처리할 수 있음</li>\n<li>사용자가 이전에 고려하지 않았을 수 있는 항목을 추천할 수 있음</li>\n</ul>\n<p><strong>협업 필터링의 단점</strong></p>\n<ul>\n<li>이해하고 구현하기 어려울 수 있음</li>\n<li>다른 사용자의 항목 등급에 대한 제한된 데이터가 있는 경우 정확한 권장 사항을 제공하지 못할 수 있음</li>\n<li>시스템이 아직 어떤 항목도 등급을 매기지 않은 새 사용자에게 권장 사항을 제공할 수 없는 ”<strong>콜드 스타트</strong>” 문제가 발생할 수 있음</li>\n<li>아이템의 인기에 영향을 받아 인기 아이템 추천에 대한 편견이 생길 수 있음</li>\n</ul>\n<p>이러한 장단점을 서로가 보완해줄 수 있지 않을까? 라는 생각에서 출발하여 Hybrid Recommander System이 등장하게 된다.<br></p>\n<blockquote>\n<p>말그대로 둘을 짬뽕한 것이다.</p>\n</blockquote>\n<p>특히, 협업필터링의 Cold-start문제를 콘텐츠 기반 추천시스템으로 보완해줄 수 있다.</p>\n<p><br><br></p>\n<h2 id=\"5-그외의-알고리즘들\" style=\"position:relative;\"><a href=\"#5-%EA%B7%B8%EC%99%B8%EC%9D%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EB%93%A4\" aria-label=\"5 그외의 알고리즘들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 그외의 알고리즘들</h2>\n<p>앞서 설명한 것이외에도</p>\n<ul>\n<li>Context-based Recommendation</li>\n<li>Community-based Recommendation</li>\n<li>Knowledge-based Recommendation</li>\n</ul>\n<p>등이 있다.\r\n또 기회가 된다면 이러한 기타 알고리즘도 다뤄보도록 하겠다.\r\n<br><br></p>\n<h2 id=\"6-마무리\" style=\"position:relative;\"><a href=\"#6-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"6 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 마무리</h2>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/217863904-389ad815-5849-4c71-a32d-3a8a76d8994e.png\" alt=\"pngwing com\"><br>\r\n이번글에서는 추천시스템 알고리즘의 대표적인 2가지에 대해 알아보았다.<br>\r\n다음글은 뭘로 찾아올진 모르겠다 안녕~</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\">0. 지난 이야기</a></li>\n<li><a href=\"#1-%EC%B6%94%EC%B2%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%ED%9D%90%EB%A6%84%EB%8F%84\">1. 추천 알고리즘 흐름도</a></li>\n<li><a href=\"#2-%EC%BD%98%ED%85%90%EC%B8%A0-%EA%B8%B0%EB%B0%98-%EC%B6%94%EC%B2%9C-%EC%8B%9C%EC%8A%A4%ED%85%9Ccontents-based-recommander-system\">2. 콘텐츠 기반 추천 시스템(Contents-based Recommander System)</a></li>\n<li><a href=\"#3-%ED%98%91%EC%97%85-%ED%95%84%ED%84%B0%EB%A7%81collaborative-filtering\">3. 협업 필터링(Collaborative Filtering)</a></li>\n<li><a href=\"#4-hybrid-recommander-system\">4. Hybrid Recommander System</a></li>\n<li><a href=\"#5-%EA%B7%B8%EC%99%B8%EC%9D%98-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EB%93%A4\">5. 그외의 알고리즘들</a></li>\n<li><a href=\"#6-%EB%A7%88%EB%AC%B4%EB%A6%AC\">6. 마무리</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 10, 2023","title":"1. 추천 알고리즘 알아보기","categories":"추천시스템","author":"tanny","emoji":"🔮"},"fields":{"slug":"/recommend_system/2/"}},"prev":{"id":"e1401dd9-31c3-56be-98e7-824572e6fb3f","html":"<h2 id=\"0-지난-이야기\" style=\"position:relative;\"><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\" aria-label=\"0 지난 이야기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 지난 이야기</h2>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/218152623-d8e0c8c0-7dd6-4c25-870f-feafbde86a87.png\" alt=\"image\"><br></p>\n<p><a href=\"https://tannybrown.github.io/ai/11/\">이전글</a>에서는 non-linear activation을 쓰는 이유에 대해 살펴보았다. <br>\r\n이번글에서는 <strong>이진분류</strong>에 대해서 살펴보며, <strong>sigmoid</strong>를 쓰는 이유를 알아보도록 하자. <br></p>\n<br>\r\n<br>\n<h2 id=\"1-이진분류-문제with-unit-step-function\" style=\"position:relative;\"><a href=\"#1-%EC%9D%B4%EC%A7%84%EB%B6%84%EB%A5%98-%EB%AC%B8%EC%A0%9Cwith-unit-step-function\" aria-label=\"1 이진분류 문제with unit step function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 이진분류 문제(with unit step function)</h2>\n<p>이전까지 회귀문제를 살펴보았고, 이번엔 분류(classification)를 살펴보려고 한다.<br>\r\n가장 간단한 분류인 이진분류를 먼저 알아보자.<br>\r\n이진분류는 말그대로 ‘둘 중 하나로 분류하는 것’을 의미한다. 예를 들면, 어떠한 사진을 보고, 개냐 고양이냐와 같은 문제 말이다.<br>\r\n하나의 예시를 같이 보면서 이진분류를 하나 생각해보겠다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218140868-140e287d-9a09-4ebf-9a75-cf54a1b1aa59.png\" alt=\"image\"><br></p>\n<blockquote>\n<p>정말 그래프 퀄리티가 엄청나다.</p>\n</blockquote>\n<p><strong>키</strong>와 <strong>몸무게</strong>에 따른 분포가 주어진 그래프가 있다. 이 그래프에서 살을 찌워야하는 사람(저체중)과 살을 빼야하는 사람(과체중)을 분류하려한다.<br>\r\n이때 단순하게 한개의 layer 만을 이용해서 분류해보자. 또, 활성화 함수로는 non-linear activation인 unit step function을 이용해보자.</p>\n<blockquote>\n<p>unit step function은 0보다 크면 1, 0보다 작으면 0을 출력하는 함수로, 0또는 1을 출력하므로 이진분류를 할 수 있다.</p>\n</blockquote>\n<p>퍼셉트론을 구성해서 다음과 같이 학습을 잘 마쳤다고 해보자.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218144577-7c56d787-24d2-49f6-8060-17e96dc72de7.png\" alt=\"image\"><br>\r\nx를 키,y를 몸무게 라고 한다면, y = x + 1 직선이 그래프상에서 분류의 기준선이 됨을 알 수 있다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218144994-472f6afc-1c1b-4975-8b10-c5eef714dffe.png\" alt=\"image\"><br>\r\n이렇게 키와 몸무게라는 feature를 갖고 이진분류를 할 수 있었다.<br></p>\n<br>\r\n<br>\n<h2 id=\"2-unit-step-function의-문제점\" style=\"position:relative;\"><a href=\"#2-unit-step-function%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\" aria-label=\"2 unit step function의 문제점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. unit step function의 문제점</h2>\n<p>앞서 이진분류를 해보았는데, 문제가 있다.<br></p>\n<blockquote>\n<p>??? : 문제를 삼으면 문제가 되고 문제를 삼지 않으면 문제가 되지 않…</p>\n</blockquote>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/218145633-df7314e7-eb9f-41fd-a14a-0c2e2682036b.png\" alt=\"image\"><br>\r\n파랑색 데이터가 주어졌을때, 이 데이터는 분류기상에서 과체중으로 분류된다.<br>\r\n허나 실제로 이 데이터는 과체중은 아니다. 정확히 말하면 평균체중, 정상체중이라고 볼 수 있다.<br>\r\n이렇게 unit step function은 1 또는 0으로만 표현하기때문에 ‘정도’를 표현할 수가 없다.<br>\r\n따라서 ‘정도’를 표현하기 위해서 우린 다른 activation을 써볼 것이다. 바로, sigmoid!</p>\n<blockquote>\n<p>unit step function의 단점은 이뿐만이 아니다. <br>\r\nstep function이기에 미분도 불가능하다. 즉 gradient descent를 쓸 수 없다.<br>\r\n또, 분류를 뭣같이한다. 오버피팅이라고 봐야할까? 선을 막그어도 분류가 되기만 하면 ok이다. 정도 표현이 안되니 아슬아슬하게 분류하기도 한다는 말!</p>\n</blockquote>\n<br>\r\n<br>\n<h2 id=\"3-이진분류-문제with-sigmoid\" style=\"position:relative;\"><a href=\"#3-%EC%9D%B4%EC%A7%84%EB%B6%84%EB%A5%98-%EB%AC%B8%EC%A0%9Cwith-sigmoid\" aria-label=\"3 이진분류 문제with sigmoid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 이진분류 문제(with Sigmoid)</h2>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/218146967-db2d4cab-dfe5-4519-bb09-8a1a443e0ee0.png\" alt=\"image\"><br><br>\r\n위 함수를 sigmoid 함수라고 한다. 식을 보고 바로 느껴야하는 것이 바로, <strong>전구간 미분가능</strong>하다는 것이다. <br>\r\n자그러면 sigmoid 함수개형을 그려보자.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218147185-eee489d1-b8e8-41af-a345-8b457c24c2f4.png\" alt=\"image\"><br>\r\n딱 보기에도, unit step function보다 유연함을 알 수 있다.<br>\r\nsigmoid를 이용하여 위 분류문제를 풀 경우 다음과 같은 결과를 얻어낼 수 있다.<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218148024-892e1bee-2835-4ab1-8518-50e261aae7c7.png\" alt=\"image\"><br></p>\n<blockquote>\n<p>그림판을 이용하다보니.. 죄송합니다.</p>\n</blockquote>\n<p>보면 알 수 있듯, 유연하게 분류되는 곡면을 갖게 된다. 이게 뭐가 좋은것이냐? <br>\r\n파란점을 분류할때 sigmoid는 0에서 1사이의 숫자를 출력할 것이다. 지금 그래프를 참고해서 0.52정도를 출력했다고 해보자.<br>\r\n0에 가까우면 저체중, 1에 가까우면 과체중으로 판별이 가능하니, 0.52라는 수치는 굳이 살을 뺄필요도, 찌울필요도 없다는 것으로 판단할 수 있다.</p>\n<blockquote>\n<p>이처럼 0과1사이의 수치로 출력된 결과를 통해서 ’<strong>정도</strong>‘를 판단할 수 있게 된다.(정도를 ‘확률’로 해석하기도 한다.)</p>\n</blockquote>\n<p>sigmoid의 장점은 이뿐만이 아니다.<br>\r\nsigmoid는 <strong>합리적인 기준선</strong>을 찾는다.</p>\n<blockquote>\n<p>이게 무슨말이에요?</p>\n</blockquote>\n<p>unit step function처럼 <strong>무지성 분류</strong>가 아니라는 말이다. sigmoid는 두 class를 구분짓는, <strong>가장 멀리 찢어놓는 선</strong>을 찾는다.<br>\r\n예를 들어<br>\r\n<img src=\"https://user-images.githubusercontent.com/121401159/218150681-3da98d2e-de0b-436a-8300-b6cf82b1efae.png\" alt=\"image\"><br>\r\n이렇게 분류해도 unit step function은 분류를 한것이다.(즉 학습을 멈춘다.)<br>\r\n하지만 sigmoid는 아니다. sigmoid는 더 최적의 weight를 찾아서 학습을 계속한다. 따라서 더 적절한 분류기준선을 찾는다.</p>\n<br>\n<p>정리하면</p>\n<ul>\n<li>미분가능</li>\n<li>부드러운 분류</li>\n<li>확률로 해석가능</li>\n<li>합리적인 분류 기준선</li>\n</ul>\n<p>이 가능하다.\r\n<br>\r\n<br></p>\n<h2 id=\"4-마무리\" style=\"position:relative;\"><a href=\"#4-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\"4 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 마무리</h2>\n<p><img src=\"https://user-images.githubusercontent.com/121401159/218152336-640eb4a9-ebf7-4ada-bda6-924a6f0f9e6a.png\" alt=\"image\"><br></p>\n<p>이번 시간에는 이진분류가 무엇인지, sigmoid를 왜써야하는지 알아보았다.<br>\r\n다음글에서는 이진분류와 likelihood에 대해 알아보도록 하겠다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#0-%EC%A7%80%EB%82%9C-%EC%9D%B4%EC%95%BC%EA%B8%B0\">0. 지난 이야기</a></li>\n<li><a href=\"#1-%EC%9D%B4%EC%A7%84%EB%B6%84%EB%A5%98-%EB%AC%B8%EC%A0%9Cwith-unit-step-function\">1. 이진분류 문제(with unit step function)</a></li>\n<li><a href=\"#2-unit-step-function%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90\">2. unit step function의 문제점</a></li>\n<li><a href=\"#3-%EC%9D%B4%EC%A7%84%EB%B6%84%EB%A5%98-%EB%AC%B8%EC%A0%9Cwith-sigmoid\">3. 이진분류 문제(with Sigmoid)</a></li>\n<li><a href=\"#4-%EB%A7%88%EB%AC%B4%EB%A6%AC\">4. 마무리</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 11, 2023","title":"11. 이진분류 (상)편 (feat.sigmoid를 쓰는 이유)","categories":"AI/ML/DL","author":"tanny","emoji":"🔮"},"fields":{"slug":"/ai/12/"}},"site":{"siteMetadata":{"siteUrl":"https://tannybrown.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/ai/11/","nextSlug":"/recommend_system/2/","prevSlug":"/ai/12/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}